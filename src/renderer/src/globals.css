@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

/* === PixelForge Design System === */
/* Precision-crafted color palette for AI creativity tools */
:root {
  /* === Core Neutrals === */
  --background: 0 0% 98.5%;
  --foreground: 220 30% 8%;
  
  /* === Surface System === */
  --surface-primary: 0 0% 100%;
  --surface-secondary: 220 14% 96%;
  --surface-tertiary: 220 14% 93%;
  --surface-overlay: 220 30% 8%;
  
  /* === Card System === */
  --card: 0 0% 100%;
  --card-foreground: 220 30% 8%;
  --card-border: 220 14% 88%;
  
  /* === Interactive Elements (single-hue, no gradients) === */
  /* Brand: Electric Violet — assertive yet refined */
  --primary: 256 72% 56%;
  --primary-foreground: 0 0% 100%;
  --primary-hover: 256 72% 50%;
  --primary-active: 256 72% 44%;
  
  /* === Secondary Actions === */
  --secondary: 220 14% 93%;
  --secondary-foreground: 220 30% 25%;
  --secondary-hover: 220 14% 88%;
  
  /* === Accent & Highlight (unified with brand) === */
  --accent: 256 72% 56%;
  --accent-foreground: 0 0% 100%;
  --accent-hover: 256 72% 50%;
  
  /* === Text Hierarchy === */
  --text-primary: 220 30% 8%;
  --text-secondary: 220 20% 35%;
  --text-tertiary: 220 15% 50%;
  --text-muted: 220 10% 65%;
  
  /* === Status Colors === */
  --success: 142 72% 29%;
  --success-bg: 142 72% 96%;
  --warning: 36 84% 45%;
  --warning-bg: 36 84% 96%;
  --danger: 0 84% 60%;
  --danger-bg: 0 84% 96%;
  --info: 210 92% 58%;
  --info-bg: 210 92% 96%;
  
  /* === Borders & Inputs === */
  --border: 220 14% 88%;
  --border-subtle: 220 14% 93%;
  --input: 220 14% 88%;
  --ring: 256 72% 56%;
  
  /* === Legacy Compatibility === */
  --muted: 220 14% 93%;
  --muted-foreground: 220 15% 50%;
  --popover: 0 0% 100%;
  --popover-foreground: 220 30% 8%;
  --destructive: 0 84% 60%;
  --destructive-foreground: 0 0% 100%;
  
  /* === Spatial System === */
  --radius: 0.75rem;
  --radius-sm: 0.5rem;
  --radius-lg: 1rem;
  --radius-xl: 1.25rem;
  
  /* === Animation Curves === */
  --ease-spring: cubic-bezier(0.175, 0.885, 0.32, 1.275);
  --ease-smooth: cubic-bezier(0.4, 0, 0.2, 1);
  --ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.dark {
  /* === Core Neutrals === */
  --background: 220 30% 3%;
  --foreground: 220 20% 95%;
  
  /* === Surface System === */
  --surface-primary: 220 25% 6%;
  --surface-secondary: 220 20% 9%;
  --surface-tertiary: 220 18% 12%;
  --surface-overlay: 220 20% 95%;
  
  /* === Card System === */
  --card: 220 25% 6%;
  --card-foreground: 220 20% 95%;
  --card-border: 220 18% 15%;
  
  /* === Interactive Elements (single-hue, no gradients) === */
  --primary: 256 76% 64%;
  --primary-foreground: 220 30% 3%;
  --primary-hover: 256 76% 70%;
  --primary-active: 256 76% 76%;
  
  /* === Secondary Actions === */
  --secondary: 220 18% 12%;
  --secondary-foreground: 220 20% 85%;
  --secondary-hover: 220 18% 15%;
  
  /* === Accent & Highlight (unified with brand) === */
  --accent: 256 76% 64%;
  --accent-foreground: 220 30% 3%;
  --accent-hover: 256 76% 70%;
  
  /* === Text Hierarchy === */
  --text-primary: 220 20% 95%;
  --text-secondary: 220 15% 75%;
  --text-tertiary: 220 12% 60%;
  --text-muted: 220 10% 45%;
  
  /* === Status Colors === */
  --success: 142 72% 45%;
  --success-bg: 142 72% 10%;
  --warning: 36 84% 60%;
  --warning-bg: 36 84% 10%;
  --danger: 0 84% 65%;
  --danger-bg: 0 84% 10%;
  --info: 210 92% 65%;
  --info-bg: 210 92% 10%;
  
  /* === Borders & Inputs === */
  --border: 220 18% 15%;
  --border-subtle: 220 18% 12%;
  --input: 220 18% 15%;
  --ring: 256 76% 64%;
  
  /* === Legacy Compatibility === */
  --muted: 220 18% 12%;
  --muted-foreground: 220 12% 60%;
  --popover: 220 25% 6%;
  --popover-foreground: 220 20% 95%;
  --destructive: 0 84% 65%;
  --destructive-foreground: 220 30% 3%;
}

/* Ensure app takes full viewport height */
html, body, #root { height: 100%; }
body { margin: 0; }

/* Base body/background using the CSS vars */
body { background-color: hsl(var(--background)); color: hsl(var(--foreground)); }

/* Utility tokens for radius (used by some shadcn components) */
:root {
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: var(--radius);
  --radius-lg: calc(var(--radius) + 2px);
}

/* === PixelForge Component System === */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  border-radius: var(--radius);
  padding: 0.75rem 1.25rem;
  font-size: 0.875rem;
  font-weight: 600;
  letter-spacing: -0.025em;
  transition: all 200ms var(--ease-smooth);
  position: relative;
  overflow: hidden;
}
.btn:disabled { 
  opacity: 0.4; 
  pointer-events: none; 
  filter: grayscale(0.8);
}
/* Remove glossy sweep; keep interaction crisp without gradients */
.btn::before { content: none; }

.btn-primary {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  box-shadow: 0 2px 8px -2px hsl(var(--primary) / 0.3);
}
.btn-primary:hover { 
  transform: translateY(-1px);
  box-shadow: 0 4px 16px -4px hsl(var(--primary) / 0.4);
}
.btn-primary:active { 
  transform: translateY(0);
  transition-duration: 75ms;
}

.btn-outline {
  border: 1.5px solid hsl(var(--border));
  background-color: hsl(var(--surface-primary));
  color: hsl(var(--text-primary));
}
.btn-outline:hover { 
  background-color: hsl(var(--surface-secondary));
  border-color: hsl(var(--primary) / 0.3);
  transform: translateY(-1px);
}

.btn-ghost { 
  background-color: transparent;
  color: hsl(var(--text-secondary));
}
.btn-ghost:hover { 
  background-color: hsl(var(--surface-secondary));
  color: hsl(var(--text-primary));
}

.btn-danger {
  background-color: hsl(var(--danger));
  color: white;
  box-shadow: 0 2px 8px -2px hsl(var(--danger) / 0.3);
}
.btn-danger:hover { 
  transform: translateY(-1px);
  box-shadow: 0 4px 16px -4px hsl(var(--danger) / 0.4);
}

/* === Enhanced Card System === */
.card, .card-base {
  border-radius: var(--radius-lg);
  border: 1px solid hsl(var(--card-border));
  background-color: hsl(var(--card));
  color: hsl(var(--card-foreground));
  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.06);
  transition: all 300ms var(--ease-smooth);
}

.card-interactive {
  cursor: pointer;
  transition: all 300ms var(--ease-smooth);
}
.card-interactive:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px -8px rgb(0 0 0 / 0.12);
  border-color: hsl(var(--primary) / 0.2);
}

.card-elevated {
  box-shadow: 0 4px 16px -4px rgb(0 0 0 / 0.08);
}

/* === Form Elements === */
.input, .input-base {
  height: 2.75rem;
  padding: 0.625rem 1rem;
  border-radius: var(--radius);
  border: 1.5px solid hsl(var(--input));
  background-color: hsl(var(--surface-primary));
  color: hsl(var(--text-primary));
  transition: all 200ms var(--ease-smooth);
}
.input:focus {
  outline: none;
  border-color: hsl(var(--primary));
  box-shadow: 0 0 0 3px hsl(var(--primary) / 0.1);
}

.select, .select-base {
  height: 2.75rem;
  padding: 0.625rem 1rem;
  border-radius: var(--radius);
  border: 1.5px solid hsl(var(--input));
  background-color: hsl(var(--surface-primary));
  color: hsl(var(--text-primary));
  transition: all 200ms var(--ease-smooth);
}

/* === Status Badge System === */
.badge, .badge-info, .badge-success, .badge-danger, .badge-warn, .badge-warning {
  display: inline-flex;
  align-items: center;
  gap: 0.375rem;
  border-radius: var(--radius-xl);
  padding: 0.25rem 0.75rem;
  font-size: 0.75rem;
  font-weight: 600;
  letter-spacing: 0.025em;
  border: 1px solid transparent;
  transition: all 200ms var(--ease-smooth);
}

.badge { 
  background-color: hsl(var(--surface-tertiary)); 
  color: hsl(var(--text-secondary)); 
  border-color: hsl(var(--border-subtle));
}

.badge-info { 
  background-color: hsl(var(--info-bg)); 
  color: hsl(var(--info)); 
  border-color: hsl(var(--info) / 0.2);
}

.badge-success { 
  background-color: hsl(var(--success-bg)); 
  color: hsl(var(--success)); 
  border-color: hsl(var(--success) / 0.2);
}

.badge-danger { 
  background-color: hsl(var(--danger-bg)); 
  color: hsl(var(--danger)); 
  border-color: hsl(var(--danger) / 0.2);
}

.badge-warn, .badge-warning { 
  background-color: hsl(var(--warning-bg)); 
  color: hsl(var(--warning)); 
  border-color: hsl(var(--warning) / 0.2);
}

/* === Enhanced Badge Variants === */
.badge-primary {
  background-color: hsl(var(--primary) / 0.1);
  color: hsl(var(--primary));
  border-color: hsl(var(--primary) / 0.2);
}

.badge-pulse {
  animation: pulse-badge 2s infinite;
}

@keyframes pulse-badge {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

/* === Sophisticated Toolbar System === */
.toolbar-modern {
  position: sticky; 
  top: 0; 
  z-index: 20;
  display: flex; 
  align-items: center; 
  justify-content: space-between; 
  gap: 1.5rem;
  background: hsl(var(--surface-primary) / 0.8);
  -webkit-backdrop-filter: blur(20px); 
  backdrop-filter: blur(20px);
  padding: 1.25rem 2rem; 
  border-bottom: 1px solid hsl(var(--border-subtle));
  box-shadow: inset 0 1px 0 0 rgb(255 255 255 / 0.05);
}

/* === Enhanced Segmented Controls === */
.segmented { 
  display: inline-flex; 
  background-color: hsl(var(--surface-secondary));
  border: 1px solid hsl(var(--border-subtle)); 
  border-radius: var(--radius); 
  padding: 0.25rem;
  box-shadow: inset 0 1px 3px 0 rgb(0 0 0 / 0.06);
}
.segmented-item { 
  padding: 0.5rem 1rem; 
  border-radius: calc(var(--radius) - 0.125rem);
  font-weight: 500;
  font-size: 0.875rem;
  transition: all 200ms var(--ease-smooth);
  color: hsl(var(--text-secondary));
}
.segmented-item.is-active { 
  background-color: hsl(var(--surface-primary));
  color: hsl(var(--text-primary));
  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
}
.segmented-item:hover:not(.is-active) {
  color: hsl(var(--text-primary));
  background-color: hsl(var(--surface-primary) / 0.5);
}

/* === Advanced Glass Morphism === */
.glass-panel {
  -webkit-backdrop-filter: blur(24px); 
  backdrop-filter: blur(24px);
  background: hsl(var(--surface-primary) / 0.8);
  border: 1px solid hsl(var(--border-subtle));
  box-shadow: 
    inset 0 1px 0 0 rgb(255 255 255 / 0.1),
    0 4px 16px -4px rgb(0 0 0 / 0.08);
}

/* === Interactive Dropzone === */
.dropzone-idle {
  border: 2px dashed hsl(var(--border));
  border-radius: var(--radius-xl);
  background: hsl(var(--surface-secondary) / 0.5);
  transition: all 300ms var(--ease-smooth);
}
.dropzone-active { 
  border: 2px dashed hsl(var(--primary)); 
  background: hsl(var(--primary) / 0.05);
  box-shadow: 0 0 0 4px hsl(var(--primary) / 0.1);
  transform: scale(1.02);
}

/* === Elegant Loading States === */
.spinner { 
  animation: spin 1.2s linear infinite; 
  border: 2px solid hsl(var(--border-subtle)); 
  border-top-color: hsl(var(--primary)); 
  border-radius: 50%; 
  width: 1rem; 
  height: 1rem; 
}
@keyframes spin { 
  to { transform: rotate(360deg) } 
}

.spinner-pulse {
  animation: pulse-spinner 1.5s ease-in-out infinite;
}
@keyframes pulse-spinner {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.3; }
}

/* === Refined Navigation System === */
.nav-item-base { 
  display: flex; 
  align-items: center; 
  gap: 1rem; 
  border-radius: var(--radius-lg); 
  padding: 1rem 1.25rem; 
  height: auto; /* override shadcn button fixed height */
  cursor: pointer;
  font-size: 0.875rem; 
  font-weight: 500;
  color: hsl(var(--text-secondary));
  transition: all 250ms var(--ease-smooth);
  position: relative;
  overflow: hidden;
}

.nav-item-base::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: hsl(var(--surface-secondary));
  opacity: 0;
  transition: opacity 250ms var(--ease-smooth);
}

.nav-item-base:hover::before { 
  opacity: 1; 
}

.nav-item-base:hover { 
  color: hsl(var(--text-primary));
  transform: translateX(4px);
}

.nav-item-active { 
  background-color: hsl(var(--primary) / 0.1);
  color: hsl(var(--primary));
  font-weight: 600;
  box-shadow: 
    inset 0 1px 0 0 rgb(255 255 255 / 0.1),
    0 2px 8px -2px hsl(var(--primary) / 0.2);
}

.nav-item-active::after {
  content: '';
  position: absolute;
  right: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 3px;
  height: 20px;
  background: hsl(var(--primary));
  border-radius: 2px;
}

@theme inline {
  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
  @keyframes accordion-down {
  from {
    height: 0;
    }
  to {
    height: var(--reka-accordion-content-height);
    }
  }
  @keyframes accordion-up {
  from {
    height: var(--reka-accordion-content-height);
    }
  to {
    height: 0;
    }
  }
  @keyframes accordion-down {
  from {
    height: 0;
    }
  to {
    height: var(--reka-accordion-content-height);
    }
  }
  @keyframes accordion-up {
  from {
    height: var(--reka-accordion-content-height);
    }
  to {
    height: 0;
    }
  }
}

/* Remove Tailwind token utilities to avoid unknown-class errors in v4.
   Equivalent base styles are already set above using CSS variables. */
.shadow-elegant { box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1); }
.shadow-floating { box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1); }
.shadow-elevated { box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1); }
.shadow-dramatic { box-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25); }
.shadow-glass { box-shadow: inset 0 1px 0 0 rgb(255 255 255 / 0.05); }

/* === PixelForge Animation System === */
.animate-fade-in { 
  animation: fade-in 400ms var(--ease-smooth) both; 
}
@keyframes fade-in { 
  from { opacity: 0; } 
  to { opacity: 1; } 
}

.animate-scale-in { 
  animation: scale-in 300ms var(--ease-spring) both; 
}
@keyframes scale-in { 
  from { 
    transform: scale(0.95); 
    opacity: 0; 
  } 
  to { 
    transform: scale(1); 
    opacity: 1; 
  } 
}

.animate-slide-in-from-top { 
  animation: slide-down 400ms var(--ease-smooth) both; 
}
@keyframes slide-down { 
  from { 
    transform: translateY(-12px); 
    opacity: 0; 
  } 
  to { 
    transform: translateY(0); 
    opacity: 1; 
  } 
}

.animate-slide-in-from-bottom { 
  animation: slide-up 400ms var(--ease-smooth) both; 
}
@keyframes slide-up { 
  from { 
    transform: translateY(12px); 
    opacity: 0; 
  } 
  to { 
    transform: translateY(0); 
    opacity: 1; 
  } 
}

.animate-bounce-subtle {
  animation: bounce-subtle 2s infinite;
}
@keyframes bounce-subtle {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-3px);
  }
  60% {
    transform: translateY(-2px);
  }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}
@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-4px); }
}

.animate-glow {
  animation: glow 2s ease-in-out infinite alternate;
}
@keyframes glow {
  from {
    box-shadow: 0 0 10px hsl(var(--primary) / 0.2);
  }
  to {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.4);
  }
}

/* === Utility Classes === */
.line-clamp-1 { 
  display: -webkit-box; 
  -webkit-line-clamp: 1; 
  -webkit-box-orient: vertical; 
  overflow: hidden; 
}

.line-clamp-2 { 
  display: -webkit-box; 
  -webkit-line-clamp: 2; 
  -webkit-box-orient: vertical; 
  overflow: hidden; 
}

/* Explicitly flat variants for any legacy “*gradient” class names */
.text-gradient { color: hsl(var(--primary)); }
.border-gradient { background: hsl(var(--surface-primary)); border: 1px solid hsl(var(--primary) / 0.3); }
